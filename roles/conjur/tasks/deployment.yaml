- name: Create deployment
  k8s:
    definition:
      apiVersion: apps/v1beta2
      kind: Deployment
      metadata:
        name: "{{ meta.name }}"
        labels: &AppConjurLabels
          app: "{{ meta.name }}"
          release: "{{ meta.name }}"
          app.kubernetes.io/name: "{{ meta.name }}"
          app.kubernetes.io/component: service
#          with_items:
#            - "{{ conjurLabels }}"

        annotations:
          - "{{ deployment.annotations }}"
      spec:
        replicas: "{{ replicaCount }}"
        selector:
          matchLabels: *AppConjurLabels
        template:
          metadata:
            labels: *AppConjurLabels
          spec:
            serviceAccountName: "{{ template "conjur-oss.service-account" . }}"
            volumes:
            - name: "{{ meta.name }}-conjur-ssl-cert-volume"
              secret:
                secretName: "{{ meta.name }}-conjur-ssl-cert"
                # Permission == 0400. JSON spec doesn’t support octal notation.
                defaultMode: 256
            - name: "{{ meta.name }}-conjur-ssl-ca-cert-volume"
              secret:
                secretName: "{{ meta.name }}-conjur-ssl-ca-cert"
                # Permission == 0400. JSON spec doesn’t support octal notation.
                defaultMode: 256
            - name: "{{ meta.name }}-conjur-configmap-volume"
              configMap:
                name: "{{ meta.name }}-conjur-nginx-configmap"
                items:
                  - key: nginx_conf
                    path: nginx.conf
                  - key: mime_types
                    path: mime.types
                  - key: dhparams
                    path: dhparams.pem
                  - key: conjur_site
                    path: sites-enabled/conjur.conf
            containers:
            - name: "{{ meta.name }}-nginx"
              image: "{{ nginx.image.repository }}":"{{ nginx.image.tag }}""
              imagePullPolicy: "{{ nginx.image.pullPolicy }}"
              ports:
              - containerPort: 9443
                name: https
              - containerPort: 9000
                name: http
              livenessProbe:
                httpGet:
                  path: /status
                  scheme: HTTPS
                  port: https
                initialDelaySeconds: 1
                periodSeconds: 5
                timeoutSeconds: 3
                # 1 seconds * 180 = 3 minutes
                failureThreshold: 180
              readinessProbe:
                httpGet:
                  path: /status
                  scheme: HTTPS
                  port: https
                initialDelaySeconds: 1
                periodSeconds: 5
                timeoutSeconds: 3
                # 1 seconds * 180 = 3 minutes
                failureThreshold: 180
              volumeMounts:
              - name: "{{ meta.name }}-conjur-ssl-cert-volume"
                mountPath: /opt/conjur/etc/ssl/cert
                readOnly: true
              - name: "{{ meta.name }}-conjur-ssl-ca-cert-volume"
                mountPath: /opt/conjur/etc/ssl/ca
                readOnly: true
              - name: "{{ meta.name }}-conjur-configmap-volume"
                mountPath: /etc/nginx
                readOnly: true
            - name: "{{ meta.name }}"
              image: "{{ image.repository }}":"{{ image.tag }}""
              imagePullPolicy: "{{ image.pullPolicy }}"
              args: ["server"]
              ports:
                - name: http
                  containerPort: 80
                  protocol: TCP
              livenessProbe:
                httpGet:
                  path: /
                  port: 80
                initialDelaySeconds: 1
                periodSeconds: 5
                timeoutSeconds: 2
                # 1 seconds * 180 = 3 minutes
                failureThreshold: 180
              readinessProbe:
                httpGet:
                  path: /
                  port: http
                initialDelaySeconds: 1
                periodSeconds: 30
                timeoutSeconds: 30
                # 1 seconds * 180 = 3 minutes
                failureThreshold: 180
              env:
              - name: CONJUR_AUTHENTICATORS
                valueFrom:
                  secretKeyRef:
                    name: "{{ meta.name }}-conjur-authenticators"
                    key: key
              - name: CONJUR_DATA_KEY
                valueFrom:
                  secretKeyRef:
                    name: "{{ meta.name }}-conjur-data-key"
                    key: key
              - name: DATABASE_URL
                valueFrom:
                  secretKeyRef:
                    name: "{{ meta.name }}-conjur-database-url"
                    key: key
              - name: CONJUR_ACCOUNT
                value: "{{ account }}"
              resources:
                - "{{ resources }}"
#      "{{ toYaml resources | indent 12 }}"
#          "{{- with nodeSelector }}"
            nodeSelector:
              - "{{ nodeSeclector }}"
#      "{{ toYaml . | indent 8 }}"
#          "{{- end }}"
#          "{{- with affinity }}"
            affinity:
              - "{{ affinity }}"
#      "{{ toYaml . | indent 8 }}"
#          "{{- end }}"
#          "{{- with tolerations }}"
            tolerations:
              - " {{ toleratrions }}"
#      "{{ toYaml . | indent 8 }}"
#          "{{- end }}"
#      "{{- if service.external.enabled -}}"
#      "{{- $fullName := include "conjur-oss.fullname" . -}}"
      ---

